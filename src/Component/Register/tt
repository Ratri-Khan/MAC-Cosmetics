import { AuthContext } from "@/AuthProviders/AuthProvider";
import { useContext } from "react";
import { useForm } from "react-hook-form";

const Register = () => {
  const { signUp, updateUserProfile, googleLogin, loading } =
    useContext(AuthContext);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const img_hosting_url = "https://api.imgbb.com/1/upload?key=${process.env.API";

  const onSubmit = (data) => {
    console.log(data);
    const formData = new FormData();
    formData.append("image", data.photo[0]);
    fetch(img_hosting_url, {
      method: "POST",
      body: formData,
    })
      .then((res) => res.json())
      .then((imageInfo) => {
        signUp(data.email, data.password).then((logedUser) => {
          console.log("logged in user", logedUser);
          const userDetails = {
            name: data.name,
            email: data.email,
            photo: imageInfo?.data?.display_url,
            userType: data.userType,
          };
          updateUserProfile(
            logedUser?.user,
            data.name,
            imageInfo?.data?.display_url
          )
        });
      });
  };
  return (
    <form onSubmit={handleSubmit(onSubmit)} className="card-body ">
      <div className="form-control">
        <label className="label">
          <span className="label-text">Name</span>
        </label>
        <input
          type="text"
          {...register("name", { required: true })}
          placeholder="Name"
          className="input input-bordered text-black"
          required
        />
      </div>
      <div className="form-control">
        <label className="label">
          <span className="label-text">Email</span>
        </label>
        <input
          type="email"
          {...register("email", { required: true })}
          placeholder="email"
          className="input input-bordered text-black"
          required
        />
      </div>
      <div className="form-control">
        <label className="label">
          <span className="label-text">Email</span>
        </label>
        <input
          type="password"
          {...register("password", { required: true })}
          placeholder="Password"
          className="input input-bordered text-black"
          required
        />
      </div>

      <label className="form-control w-full max-w-xs">
        <div className="label">
          <span className="label-text text-md">Photo</span>
        </div>
        <input
          type="file"
          className="file-input file-input-bordered w-full max-w-xs text-black"
          {...register("photo", { required: true })}
        />
      </label>

      <div className="">
        <label className="label">
          <span className="label-text">User Type</span>
        </label>
        <select
          className="select select-bordered w-full max-w-xs text-black"
          {...register("userType", { required: true })}
        >
          <option defaultValue="user">user</option>
          <option value="agent">agent</option>
          <option value="agency">agency</option>
        </select>
        {/* <input
          type="text"
          placeholder="User Type"
          {...register("userType", { required: true })}
          className="input input-bordered text-black"
          required
        /> */}
      </div>
      <div className="form-control mt-6">
        <button className="btn btn-primary">
          Register
          {loading ? (
            <span className="loading loading-spinner text-success"></span>
          ) : (
            ""
          )}
        </button>
      </div>
    </form>
  );
};

export default Register;